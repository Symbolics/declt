							     -*- outline -*-

* Copyright (C) 2010-2013 Didier Verna

This file is part of Declt.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.


** Packages and symbols
We should see what to do about shadowings, imports etc.

** Cleanup the string-downcase issue
so that it would be easier afterwards to provide an option for case behavior.

** Canonicalize pathnames
If the system definition pathname or definition sources contain funky stuff
like ./, ../ or even are symlinks, the cross-references will most probably
break. We need to work on canonical pathnames.

** Floating methods
We should document floating methods, that is, methods defined in a system's
file whereas the generic function is elsewhere (e.g. validate-superclass).
This is tricky because the way we construct definitions does not give us
access to foreign symbols. One way to access some of those is through classes
direct methods. But we're likely to miss some. Another problem is where to
store those definitions: they are neither internal, nor exported! Maybe we
could add a section for foreign definitions.

Question: besides methods, are there other kinds of floating definitions ?
Partial answer: setf expanders for which the access-fn is foreign, but the
update-fn is ours.

** Foreign setf expanders
Setf expanders are documented when the access-fn is a (generic) function or
macro. If a setf expander is defined on a symbol that has no such definition
(which is possible), it will not currently appear anywhere. What should we do?
Probably create toplevel setf expander definitions.

** Call graphs
Cf.
sb-introspect:who-calls
sb-introspect:find-function-callees
