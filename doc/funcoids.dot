strict digraph
{
  rankdir = TD;
  node [ shape = box color = blue ]

  symbol  [ color = red fontname = "times bold" ]
  funcoid [ color = red fontname = "times bold" ]
  symbol -> funcoid

  funcoid -> { "compiler-macro" type }

  expander [ color = red fontname = "times bold" ]
  funcoid -> expander -> { "short-expander" "long-expander" }

  funcoid -> combination -> { "short-combination" "long-combination" }

  funcoid -> method

  "setfable-funcoid" [ color = red fontname = "times bold" ]
  funcoid -> "setfable-funcoid" -> macro

  function [ color = red fontname = "times bold" ]
  "setfable-funcoid" -> function -> { "ordinary-function" "generic-function" }

  "accessor-mixin" [ shape = ellipse color = green fontname = "times bold" ]

  "accessor-method" [ color = red fontname = "times bold" ]
  { method "accessor-mixin" } -> "accessor-method"
  -> { "reader-method" "writer-method" }

  "ordinary-accessor" [ color = red fontname = "times bold" ]
  { "ordinary-function" "accessor-mixin" } -> "ordinary-accessor"
  -> { "ordinary-reader" "ordinary-writer" }

  "generic-accessor" [ color = red fontname = "times bold" ]
  "generic-function" -> "generic-accessor"
  -> { "generic-reader" "generic-writer" }

  { rank = same
    "short-expander" "long-expander"
    "short-combination" "long-combination"
    method macro function
  }
  { rank = same
    "reader-method" "writer-method"
    "ordinary-reader" "ordinary-writer"
    "generic-reader" "generic-writer"
  }
}
